# THIS FILE IS AUTO-GENERATED USING zydis-bindgen!
# distutils: include_dirs=ZYDIS_INCLUDES

from enum import IntEnum

class InstructionCategory(IntEnum):
    """Defines the `ZydisInstructionCategory` enum."""
    INVALID = 0
    ADOX_ADCX = 1
    AES = 2
    AMD3DNOW = 3
    AVX = 4
    AVX2 = 5
    AVX2GATHER = 6
    AVX512 = 7
    AVX512_4FMAPS = 8
    AVX512_4VNNIW = 9
    AVX512_BITALG = 10
    AVX512_VBMI = 11
    BINARY = 12
    BITBYTE = 13
    BLEND = 14
    BMI1 = 15
    BMI2 = 16
    BROADCAST = 17
    CALL = 18
    CET = 19
    CLDEMOTE = 20
    CLFLUSHOPT = 21
    CLWB = 22
    CLZERO = 23
    CMOV = 24
    COMPRESS = 25
    COND_BR = 26
    CONFLICT = 27
    CONVERT = 28
    DATAXFER = 29
    DECIMAL = 30
    EXPAND = 31
    FCMOV = 32
    FLAGOP = 33
    FMA4 = 34
    GATHER = 35
    GFNI = 36
    IFMA = 37
    INTERRUPT = 38
    IO = 39
    IOSTRINGOP = 40
    KMASK = 41
    KNC = 42
    KNCMASK = 43
    KNCSCALAR = 44
    LOGICAL = 45
    LOGICAL_FP = 46
    LZCNT = 47
    MISC = 48
    MMX = 49
    MOVDIR = 50
    MPX = 51
    NOP = 52
    PADLOCK = 53
    PCLMULQDQ = 54
    PCONFIG = 55
    PKU = 56
    POP = 57
    PREFETCH = 58
    PREFETCHWT1 = 59
    PT = 60
    PUSH = 61
    RDPID = 62
    RDRAND = 63
    RDSEED = 64
    RDWRFSGS = 65
    RET = 66
    ROTATE = 67
    SCATTER = 68
    SEGOP = 69
    SEMAPHORE = 70
    SETCC = 71
    SGX = 72
    SHA = 73
    SHIFT = 74
    SMAP = 75
    SSE = 76
    STRINGOP = 77
    STTNI = 78
    SYSCALL = 79
    SYSRET = 80
    SYSTEM = 81
    TBM = 82
    UFMA = 83
    UNCOND_BR = 84
    VAES = 85
    VBMI2 = 86
    VFMA = 87
    VPCLMULQDQ = 88
    VTX = 89
    WAITPKG = 90
    WIDENOP = 91
    X87_ALU = 92
    XOP = 93
    XSAVE = 94
    XSAVEOPT = 95
    # Maximum value of this enum.
    MAX_VALUE = 95


class ISASet(IntEnum):
    """Defines the `ZydisISASet` enum."""
    INVALID = 0
    ADOX_ADCX = 1
    AES = 2
    AMD = 3
    AMD3DNOW = 4
    AVX = 5
    AVX2 = 6
    AVX2GATHER = 7
    AVX512BW_128 = 8
    AVX512BW_128N = 9
    AVX512BW_256 = 10
    AVX512BW_512 = 11
    AVX512BW_KOP = 12
    AVX512CD_128 = 13
    AVX512CD_256 = 14
    AVX512CD_512 = 15
    AVX512DQ_128 = 16
    AVX512DQ_128N = 17
    AVX512DQ_256 = 18
    AVX512DQ_512 = 19
    AVX512DQ_KOP = 20
    AVX512DQ_SCALAR = 21
    AVX512ER_512 = 22
    AVX512ER_SCALAR = 23
    AVX512F_128 = 24
    AVX512F_128N = 25
    AVX512F_256 = 26
    AVX512F_512 = 27
    AVX512F_KOP = 28
    AVX512F_SCALAR = 29
    AVX512PF_512 = 30
    AVX512_4FMAPS_512 = 31
    AVX512_4FMAPS_SCALAR = 32
    AVX512_4VNNIW_512 = 33
    AVX512_BITALG_128 = 34
    AVX512_BITALG_256 = 35
    AVX512_BITALG_512 = 36
    AVX512_GFNI_128 = 37
    AVX512_GFNI_256 = 38
    AVX512_GFNI_512 = 39
    AVX512_IFMA_128 = 40
    AVX512_IFMA_256 = 41
    AVX512_IFMA_512 = 42
    AVX512_VAES_128 = 43
    AVX512_VAES_256 = 44
    AVX512_VAES_512 = 45
    AVX512_VBMI2_128 = 46
    AVX512_VBMI2_256 = 47
    AVX512_VBMI2_512 = 48
    AVX512_VBMI_128 = 49
    AVX512_VBMI_256 = 50
    AVX512_VBMI_512 = 51
    AVX512_VNNI_128 = 52
    AVX512_VNNI_256 = 53
    AVX512_VNNI_512 = 54
    AVX512_VPCLMULQDQ_128 = 55
    AVX512_VPCLMULQDQ_256 = 56
    AVX512_VPCLMULQDQ_512 = 57
    AVX512_VPOPCNTDQ_128 = 58
    AVX512_VPOPCNTDQ_256 = 59
    AVX512_VPOPCNTDQ_512 = 60
    AVXAES = 61
    AVX_GFNI = 62
    BMI1 = 63
    BMI2 = 64
    CET = 65
    CLDEMOTE = 66
    CLFLUSHOPT = 67
    CLFSH = 68
    CLWB = 69
    CLZERO = 70
    CMOV = 71
    CMPXCHG16B = 72
    F16C = 73
    FAT_NOP = 74
    FCMOV = 75
    FMA = 76
    FMA4 = 77
    FXSAVE = 78
    FXSAVE64 = 79
    GFNI = 80
    I186 = 81
    I286PROTECTED = 82
    I286REAL = 83
    I386 = 84
    I486 = 85
    I486REAL = 86
    I86 = 87
    INVPCID = 88
    KNCE = 89
    KNCJKBR = 90
    KNCSTREAM = 91
    KNCV = 92
    KNC_MISC = 93
    KNC_PF_HINT = 94
    LAHF = 95
    LONGMODE = 96
    LZCNT = 97
    MONITOR = 98
    MONITORX = 99
    MOVBE = 100
    MOVDIR = 101
    MPX = 102
    PADLOCK_ACE = 103
    PADLOCK_PHE = 104
    PADLOCK_PMM = 105
    PADLOCK_RNG = 106
    PAUSE = 107
    PCLMULQDQ = 108
    PCONFIG = 109
    PENTIUMMMX = 110
    PENTIUMREAL = 111
    PKU = 112
    POPCNT = 113
    PPRO = 114
    PREFETCHWT1 = 115
    PREFETCH_NOP = 116
    PT = 117
    RDPID = 118
    RDPMC = 119
    RDRAND = 120
    RDSEED = 121
    RDTSCP = 122
    RDWRFSGS = 123
    RTM = 124
    SGX = 125
    SGX_ENCLV = 126
    SHA = 127
    SMAP = 128
    SMX = 129
    SSE = 130
    SSE2 = 131
    SSE2MMX = 132
    SSE3 = 133
    SSE3X87 = 134
    SSE4 = 135
    SSE42 = 136
    SSE4A = 137
    SSEMXCSR = 138
    SSE_PREFETCH = 139
    SSSE3 = 140
    SSSE3MMX = 141
    SVM = 142
    TBM = 143
    VAES = 144
    VMFUNC = 145
    VPCLMULQDQ = 146
    VTX = 147
    WAITPKG = 148
    X87 = 149
    XOP = 150
    XSAVE = 151
    XSAVEC = 152
    XSAVEOPT = 153
    XSAVES = 154
    # Maximum value of this enum.
    MAX_VALUE = 154


class ISAExt(IntEnum):
    """Defines the `ZydisISAExt` enum."""
    INVALID = 0
    ADOX_ADCX = 1
    AES = 2
    AMD3DNOW = 3
    AVX = 4
    AVX2 = 5
    AVX2GATHER = 6
    AVX512EVEX = 7
    AVX512VEX = 8
    AVXAES = 9
    BASE = 10
    BMI1 = 11
    BMI2 = 12
    CET = 13
    CLDEMOTE = 14
    CLFLUSHOPT = 15
    CLFSH = 16
    CLWB = 17
    CLZERO = 18
    F16C = 19
    FMA = 20
    FMA4 = 21
    GFNI = 22
    INVPCID = 23
    KNC = 24
    KNCE = 25
    KNCV = 26
    LONGMODE = 27
    LZCNT = 28
    MMX = 29
    MONITOR = 30
    MONITORX = 31
    MOVBE = 32
    MOVDIR = 33
    MPX = 34
    PADLOCK = 35
    PAUSE = 36
    PCLMULQDQ = 37
    PCONFIG = 38
    PKU = 39
    PREFETCHWT1 = 40
    PT = 41
    RDPID = 42
    RDRAND = 43
    RDSEED = 44
    RDTSCP = 45
    RDWRFSGS = 46
    RTM = 47
    SGX = 48
    SGX_ENCLV = 49
    SHA = 50
    SMAP = 51
    SMX = 52
    SSE = 53
    SSE2 = 54
    SSE3 = 55
    SSE4 = 56
    SSE4A = 57
    SSSE3 = 58
    SVM = 59
    TBM = 60
    VAES = 61
    VMFUNC = 62
    VPCLMULQDQ = 63
    VTX = 64
    WAITPKG = 65
    X87 = 66
    XOP = 67
    XSAVE = 68
    XSAVEC = 69
    XSAVEOPT = 70
    XSAVES = 71
    # Maximum value of this enum.
    MAX_VALUE = 71


class Mnemonic(IntEnum):
    """Defines the `ZydisMnemonic` enum."""
    INVALID = 0
    AAA = 1
    AAD = 2
    AAM = 3
    AAS = 4
    ADC = 5
    ADCX = 6
    ADD = 7
    ADDPD = 8
    ADDPS = 9
    ADDSD = 10
    ADDSS = 11
    ADDSUBPD = 12
    ADDSUBPS = 13
    ADOX = 14
    AESDEC = 15
    AESDECLAST = 16
    AESENC = 17
    AESENCLAST = 18
    AESIMC = 19
    AESKEYGENASSIST = 20
    AND = 21
    ANDN = 22
    ANDNPD = 23
    ANDNPS = 24
    ANDPD = 25
    ANDPS = 26
    ARPL = 27
    BEXTR = 28
    BLCFILL = 29
    BLCI = 30
    BLCIC = 31
    BLCMSK = 32
    BLCS = 33
    BLENDPD = 34
    BLENDPS = 35
    BLENDVPD = 36
    BLENDVPS = 37
    BLSFILL = 38
    BLSI = 39
    BLSIC = 40
    BLSMSK = 41
    BLSR = 42
    BNDCL = 43
    BNDCN = 44
    BNDCU = 45
    BNDLDX = 46
    BNDMK = 47
    BNDMOV = 48
    BNDSTX = 49
    BOUND = 50
    BSF = 51
    BSR = 52
    BSWAP = 53
    BT = 54
    BTC = 55
    BTR = 56
    BTS = 57
    BZHI = 58
    CALL = 59
    CBW = 60
    CDQ = 61
    CDQE = 62
    CLAC = 63
    CLC = 64
    CLD = 65
    CLDEMOTE = 66
    CLEVICT0 = 67
    CLEVICT1 = 68
    CLFLUSH = 69
    CLFLUSHOPT = 70
    CLGI = 71
    CLI = 72
    CLRSSBSY = 73
    CLTS = 74
    CLWB = 75
    CLZERO = 76
    CMC = 77
    CMOVB = 78
    CMOVBE = 79
    CMOVL = 80
    CMOVLE = 81
    CMOVNB = 82
    CMOVNBE = 83
    CMOVNL = 84
    CMOVNLE = 85
    CMOVNO = 86
    CMOVNP = 87
    CMOVNS = 88
    CMOVNZ = 89
    CMOVO = 90
    CMOVP = 91
    CMOVS = 92
    CMOVZ = 93
    CMP = 94
    CMPPD = 95
    CMPPS = 96
    CMPSB = 97
    CMPSD = 98
    CMPSQ = 99
    CMPSS = 100
    CMPSW = 101
    CMPXCHG = 102
    CMPXCHG16B = 103
    CMPXCHG8B = 104
    COMISD = 105
    COMISS = 106
    CPUID = 107
    CQO = 108
    CRC32 = 109
    CVTDQ2PD = 110
    CVTDQ2PS = 111
    CVTPD2DQ = 112
    CVTPD2PI = 113
    CVTPD2PS = 114
    CVTPI2PD = 115
    CVTPI2PS = 116
    CVTPS2DQ = 117
    CVTPS2PD = 118
    CVTPS2PI = 119
    CVTSD2SI = 120
    CVTSD2SS = 121
    CVTSI2SD = 122
    CVTSI2SS = 123
    CVTSS2SD = 124
    CVTSS2SI = 125
    CVTTPD2DQ = 126
    CVTTPD2PI = 127
    CVTTPS2DQ = 128
    CVTTPS2PI = 129
    CVTTSD2SI = 130
    CVTTSS2SI = 131
    CWD = 132
    CWDE = 133
    DAA = 134
    DAS = 135
    DEC = 136
    DELAY = 137
    DIV = 138
    DIVPD = 139
    DIVPS = 140
    DIVSD = 141
    DIVSS = 142
    DPPD = 143
    DPPS = 144
    EMMS = 145
    ENCLS = 146
    ENCLU = 147
    ENCLV = 148
    ENDBR32 = 149
    ENDBR64 = 150
    ENTER = 151
    EXTRACTPS = 152
    EXTRQ = 153
    F2XM1 = 154
    FABS = 155
    FADD = 156
    FADDP = 157
    FBLD = 158
    FBSTP = 159
    FCHS = 160
    FCMOVB = 161
    FCMOVBE = 162
    FCMOVE = 163
    FCMOVNB = 164
    FCMOVNBE = 165
    FCMOVNE = 166
    FCMOVNU = 167
    FCMOVU = 168
    FCOM = 169
    FCOMI = 170
    FCOMIP = 171
    FCOMP = 172
    FCOMPP = 173
    FCOS = 174
    FDECSTP = 175
    FDISI8087_NOP = 176
    FDIV = 177
    FDIVP = 178
    FDIVR = 179
    FDIVRP = 180
    FEMMS = 181
    FENI8087_NOP = 182
    FFREE = 183
    FFREEP = 184
    FIADD = 185
    FICOM = 186
    FICOMP = 187
    FIDIV = 188
    FIDIVR = 189
    FILD = 190
    FIMUL = 191
    FINCSTP = 192
    FIST = 193
    FISTP = 194
    FISTTP = 195
    FISUB = 196
    FISUBR = 197
    FLD = 198
    FLD1 = 199
    FLDCW = 200
    FLDENV = 201
    FLDL2E = 202
    FLDL2T = 203
    FLDLG2 = 204
    FLDLN2 = 205
    FLDPI = 206
    FLDZ = 207
    FMUL = 208
    FMULP = 209
    FNCLEX = 210
    FNINIT = 211
    FNOP = 212
    FNSAVE = 213
    FNSTCW = 214
    FNSTENV = 215
    FNSTSW = 216
    FPATAN = 217
    FPREM = 218
    FPREM1 = 219
    FPTAN = 220
    FRNDINT = 221
    FRSTOR = 222
    FSCALE = 223
    FSETPM287_NOP = 224
    FSIN = 225
    FSINCOS = 226
    FSQRT = 227
    FST = 228
    FSTP = 229
    FSTPNCE = 230
    FSUB = 231
    FSUBP = 232
    FSUBR = 233
    FSUBRP = 234
    FTST = 235
    FUCOM = 236
    FUCOMI = 237
    FUCOMIP = 238
    FUCOMP = 239
    FUCOMPP = 240
    FWAIT = 241
    FXAM = 242
    FXCH = 243
    FXRSTOR = 244
    FXRSTOR64 = 245
    FXSAVE = 246
    FXSAVE64 = 247
    FXTRACT = 248
    FYL2X = 249
    FYL2XP1 = 250
    GETSEC = 251
    GF2P8AFFINEINVQB = 252
    GF2P8AFFINEQB = 253
    GF2P8MULB = 254
    HADDPD = 255
    HADDPS = 256
    HLT = 257
    HSUBPD = 258
    HSUBPS = 259
    IDIV = 260
    IMUL = 261
    IN = 262
    INC = 263
    INCSSPD = 264
    INCSSPQ = 265
    INSB = 266
    INSD = 267
    INSERTPS = 268
    INSERTQ = 269
    INSW = 270
    INT = 271
    INT1 = 272
    INT3 = 273
    INTO = 274
    INVD = 275
    INVEPT = 276
    INVLPG = 277
    INVLPGA = 278
    INVPCID = 279
    INVVPID = 280
    IRET = 281
    IRETD = 282
    IRETQ = 283
    JB = 284
    JBE = 285
    JCXZ = 286
    JECXZ = 287
    JKNZD = 288
    JKZD = 289
    JL = 290
    JLE = 291
    JMP = 292
    JNB = 293
    JNBE = 294
    JNL = 295
    JNLE = 296
    JNO = 297
    JNP = 298
    JNS = 299
    JNZ = 300
    JO = 301
    JP = 302
    JRCXZ = 303
    JS = 304
    JZ = 305
    KADDB = 306
    KADDD = 307
    KADDQ = 308
    KADDW = 309
    KAND = 310
    KANDB = 311
    KANDD = 312
    KANDN = 313
    KANDNB = 314
    KANDND = 315
    KANDNQ = 316
    KANDNR = 317
    KANDNW = 318
    KANDQ = 319
    KANDW = 320
    KCONCATH = 321
    KCONCATL = 322
    KEXTRACT = 323
    KMERGE2L1H = 324
    KMERGE2L1L = 325
    KMOV = 326
    KMOVB = 327
    KMOVD = 328
    KMOVQ = 329
    KMOVW = 330
    KNOT = 331
    KNOTB = 332
    KNOTD = 333
    KNOTQ = 334
    KNOTW = 335
    KOR = 336
    KORB = 337
    KORD = 338
    KORQ = 339
    KORTEST = 340
    KORTESTB = 341
    KORTESTD = 342
    KORTESTQ = 343
    KORTESTW = 344
    KORW = 345
    KSHIFTLB = 346
    KSHIFTLD = 347
    KSHIFTLQ = 348
    KSHIFTLW = 349
    KSHIFTRB = 350
    KSHIFTRD = 351
    KSHIFTRQ = 352
    KSHIFTRW = 353
    KTESTB = 354
    KTESTD = 355
    KTESTQ = 356
    KTESTW = 357
    KUNPCKBW = 358
    KUNPCKDQ = 359
    KUNPCKWD = 360
    KXNOR = 361
    KXNORB = 362
    KXNORD = 363
    KXNORQ = 364
    KXNORW = 365
    KXOR = 366
    KXORB = 367
    KXORD = 368
    KXORQ = 369
    KXORW = 370
    LAHF = 371
    LAR = 372
    LDDQU = 373
    LDMXCSR = 374
    LDS = 375
    LEA = 376
    LEAVE = 377
    LES = 378
    LFENCE = 379
    LFS = 380
    LGDT = 381
    LGS = 382
    LIDT = 383
    LLDT = 384
    LLWPCB = 385
    LMSW = 386
    LODSB = 387
    LODSD = 388
    LODSQ = 389
    LODSW = 390
    LOOP = 391
    LOOPE = 392
    LOOPNE = 393
    LSL = 394
    LSS = 395
    LTR = 396
    LWPINS = 397
    LWPVAL = 398
    LZCNT = 399
    MASKMOVDQU = 400
    MASKMOVQ = 401
    MAXPD = 402
    MAXPS = 403
    MAXSD = 404
    MAXSS = 405
    MFENCE = 406
    MINPD = 407
    MINPS = 408
    MINSD = 409
    MINSS = 410
    MONITOR = 411
    MONITORX = 412
    MONTMUL = 413
    MOV = 414
    MOVAPD = 415
    MOVAPS = 416
    MOVBE = 417
    MOVD = 418
    MOVDDUP = 419
    MOVDIR64B = 420
    MOVDIRI = 421
    MOVDQ2Q = 422
    MOVDQA = 423
    MOVDQU = 424
    MOVHLPS = 425
    MOVHPD = 426
    MOVHPS = 427
    MOVLHPS = 428
    MOVLPD = 429
    MOVLPS = 430
    MOVMSKPD = 431
    MOVMSKPS = 432
    MOVNTDQ = 433
    MOVNTDQA = 434
    MOVNTI = 435
    MOVNTPD = 436
    MOVNTPS = 437
    MOVNTQ = 438
    MOVNTSD = 439
    MOVNTSS = 440
    MOVQ = 441
    MOVQ2DQ = 442
    MOVSB = 443
    MOVSD = 444
    MOVSHDUP = 445
    MOVSLDUP = 446
    MOVSQ = 447
    MOVSS = 448
    MOVSW = 449
    MOVSX = 450
    MOVSXD = 451
    MOVUPD = 452
    MOVUPS = 453
    MOVZX = 454
    MPSADBW = 455
    MUL = 456
    MULPD = 457
    MULPS = 458
    MULSD = 459
    MULSS = 460
    MULX = 461
    MWAIT = 462
    MWAITX = 463
    NEG = 464
    NOP = 465
    NOT = 466
    OR = 467
    ORPD = 468
    ORPS = 469
    OUT = 470
    OUTSB = 471
    OUTSD = 472
    OUTSW = 473
    PABSB = 474
    PABSD = 475
    PABSW = 476
    PACKSSDW = 477
    PACKSSWB = 478
    PACKUSDW = 479
    PACKUSWB = 480
    PADDB = 481
    PADDD = 482
    PADDQ = 483
    PADDSB = 484
    PADDSW = 485
    PADDUSB = 486
    PADDUSW = 487
    PADDW = 488
    PALIGNR = 489
    PAND = 490
    PANDN = 491
    PAUSE = 492
    PAVGB = 493
    PAVGUSB = 494
    PAVGW = 495
    PBLENDVB = 496
    PBLENDW = 497
    PCLMULQDQ = 498
    PCMPEQB = 499
    PCMPEQD = 500
    PCMPEQQ = 501
    PCMPEQW = 502
    PCMPESTRI = 503
    PCMPESTRM = 504
    PCMPGTB = 505
    PCMPGTD = 506
    PCMPGTQ = 507
    PCMPGTW = 508
    PCMPISTRI = 509
    PCMPISTRM = 510
    PCONFIG = 511
    PDEP = 512
    PEXT = 513
    PEXTRB = 514
    PEXTRD = 515
    PEXTRQ = 516
    PEXTRW = 517
    PF2ID = 518
    PF2IW = 519
    PFACC = 520
    PFADD = 521
    PFCMPEQ = 522
    PFCMPGE = 523
    PFCMPGT = 524
    PFCPIT1 = 525
    PFMAX = 526
    PFMIN = 527
    PFMUL = 528
    PFNACC = 529
    PFPNACC = 530
    PFRCP = 531
    PFRCPIT2 = 532
    PFRSQIT1 = 533
    PFSQRT = 534
    PFSUB = 535
    PFSUBR = 536
    PHADDD = 537
    PHADDSW = 538
    PHADDW = 539
    PHMINPOSUW = 540
    PHSUBD = 541
    PHSUBSW = 542
    PHSUBW = 543
    PI2FD = 544
    PI2FW = 545
    PINSRB = 546
    PINSRD = 547
    PINSRQ = 548
    PINSRW = 549
    PMADDUBSW = 550
    PMADDWD = 551
    PMAXSB = 552
    PMAXSD = 553
    PMAXSW = 554
    PMAXUB = 555
    PMAXUD = 556
    PMAXUW = 557
    PMINSB = 558
    PMINSD = 559
    PMINSW = 560
    PMINUB = 561
    PMINUD = 562
    PMINUW = 563
    PMOVMSKB = 564
    PMOVSXBD = 565
    PMOVSXBQ = 566
    PMOVSXBW = 567
    PMOVSXDQ = 568
    PMOVSXWD = 569
    PMOVSXWQ = 570
    PMOVZXBD = 571
    PMOVZXBQ = 572
    PMOVZXBW = 573
    PMOVZXDQ = 574
    PMOVZXWD = 575
    PMOVZXWQ = 576
    PMULDQ = 577
    PMULHRSW = 578
    PMULHRW = 579
    PMULHUW = 580
    PMULHW = 581
    PMULLD = 582
    PMULLW = 583
    PMULUDQ = 584
    POP = 585
    POPA = 586
    POPAD = 587
    POPCNT = 588
    POPF = 589
    POPFD = 590
    POPFQ = 591
    POR = 592
    PREFETCH = 593
    PREFETCHNTA = 594
    PREFETCHT0 = 595
    PREFETCHT1 = 596
    PREFETCHT2 = 597
    PREFETCHW = 598
    PREFETCHWT1 = 599
    PSADBW = 600
    PSHUFB = 601
    PSHUFD = 602
    PSHUFHW = 603
    PSHUFLW = 604
    PSHUFW = 605
    PSIGNB = 606
    PSIGND = 607
    PSIGNW = 608
    PSLLD = 609
    PSLLDQ = 610
    PSLLQ = 611
    PSLLW = 612
    PSRAD = 613
    PSRAW = 614
    PSRLD = 615
    PSRLDQ = 616
    PSRLQ = 617
    PSRLW = 618
    PSUBB = 619
    PSUBD = 620
    PSUBQ = 621
    PSUBSB = 622
    PSUBSW = 623
    PSUBUSB = 624
    PSUBUSW = 625
    PSUBW = 626
    PSWAPD = 627
    PTEST = 628
    PTWRITE = 629
    PUNPCKHBW = 630
    PUNPCKHDQ = 631
    PUNPCKHQDQ = 632
    PUNPCKHWD = 633
    PUNPCKLBW = 634
    PUNPCKLDQ = 635
    PUNPCKLQDQ = 636
    PUNPCKLWD = 637
    PUSH = 638
    PUSHA = 639
    PUSHAD = 640
    PUSHF = 641
    PUSHFD = 642
    PUSHFQ = 643
    PXOR = 644
    RCL = 645
    RCPPS = 646
    RCPSS = 647
    RCR = 648
    RDFSBASE = 649
    RDGSBASE = 650
    RDMSR = 651
    RDPID = 652
    RDPKRU = 653
    RDPMC = 654
    RDRAND = 655
    RDSEED = 656
    RDSSPD = 657
    RDSSPQ = 658
    RDTSC = 659
    RDTSCP = 660
    RET = 661
    ROL = 662
    ROR = 663
    RORX = 664
    ROUNDPD = 665
    ROUNDPS = 666
    ROUNDSD = 667
    ROUNDSS = 668
    RSM = 669
    RSQRTPS = 670
    RSQRTSS = 671
    RSTORSSP = 672
    SAHF = 673
    SALC = 674
    SAR = 675
    SARX = 676
    SAVEPREVSSP = 677
    SBB = 678
    SCASB = 679
    SCASD = 680
    SCASQ = 681
    SCASW = 682
    SETB = 683
    SETBE = 684
    SETL = 685
    SETLE = 686
    SETNB = 687
    SETNBE = 688
    SETNL = 689
    SETNLE = 690
    SETNO = 691
    SETNP = 692
    SETNS = 693
    SETNZ = 694
    SETO = 695
    SETP = 696
    SETS = 697
    SETSSBSY = 698
    SETZ = 699
    SFENCE = 700
    SGDT = 701
    SHA1MSG1 = 702
    SHA1MSG2 = 703
    SHA1NEXTE = 704
    SHA1RNDS4 = 705
    SHA256MSG1 = 706
    SHA256MSG2 = 707
    SHA256RNDS2 = 708
    SHL = 709
    SHLD = 710
    SHLX = 711
    SHR = 712
    SHRD = 713
    SHRX = 714
    SHUFPD = 715
    SHUFPS = 716
    SIDT = 717
    SKINIT = 718
    SLDT = 719
    SLWPCB = 720
    SMSW = 721
    SPFLT = 722
    SQRTPD = 723
    SQRTPS = 724
    SQRTSD = 725
    SQRTSS = 726
    STAC = 727
    STC = 728
    STD = 729
    STGI = 730
    STI = 731
    STMXCSR = 732
    STOSB = 733
    STOSD = 734
    STOSQ = 735
    STOSW = 736
    STR = 737
    SUB = 738
    SUBPD = 739
    SUBPS = 740
    SUBSD = 741
    SUBSS = 742
    SWAPGS = 743
    SYSCALL = 744
    SYSENTER = 745
    SYSEXIT = 746
    SYSRET = 747
    T1MSKC = 748
    TEST = 749
    TPAUSE = 750
    TZCNT = 751
    TZCNTI = 752
    TZMSK = 753
    UCOMISD = 754
    UCOMISS = 755
    UD0 = 756
    UD1 = 757
    UD2 = 758
    UMONITOR = 759
    UMWAIT = 760
    UNPCKHPD = 761
    UNPCKHPS = 762
    UNPCKLPD = 763
    UNPCKLPS = 764
    V4FMADDPS = 765
    V4FMADDSS = 766
    V4FNMADDPS = 767
    V4FNMADDSS = 768
    VADDNPD = 769
    VADDNPS = 770
    VADDPD = 771
    VADDPS = 772
    VADDSD = 773
    VADDSETSPS = 774
    VADDSS = 775
    VADDSUBPD = 776
    VADDSUBPS = 777
    VAESDEC = 778
    VAESDECLAST = 779
    VAESENC = 780
    VAESENCLAST = 781
    VAESIMC = 782
    VAESKEYGENASSIST = 783
    VALIGND = 784
    VALIGNQ = 785
    VANDNPD = 786
    VANDNPS = 787
    VANDPD = 788
    VANDPS = 789
    VBLENDMPD = 790
    VBLENDMPS = 791
    VBLENDPD = 792
    VBLENDPS = 793
    VBLENDVPD = 794
    VBLENDVPS = 795
    VBROADCASTF128 = 796
    VBROADCASTF32X2 = 797
    VBROADCASTF32X4 = 798
    VBROADCASTF32X8 = 799
    VBROADCASTF64X2 = 800
    VBROADCASTF64X4 = 801
    VBROADCASTI128 = 802
    VBROADCASTI32X2 = 803
    VBROADCASTI32X4 = 804
    VBROADCASTI32X8 = 805
    VBROADCASTI64X2 = 806
    VBROADCASTI64X4 = 807
    VBROADCASTSD = 808
    VBROADCASTSS = 809
    VCMPPD = 810
    VCMPPS = 811
    VCMPSD = 812
    VCMPSS = 813
    VCOMISD = 814
    VCOMISS = 815
    VCOMPRESSPD = 816
    VCOMPRESSPS = 817
    VCVTDQ2PD = 818
    VCVTDQ2PS = 819
    VCVTFXPNTDQ2PS = 820
    VCVTFXPNTPD2DQ = 821
    VCVTFXPNTPD2UDQ = 822
    VCVTFXPNTPS2DQ = 823
    VCVTFXPNTPS2UDQ = 824
    VCVTFXPNTUDQ2PS = 825
    VCVTPD2DQ = 826
    VCVTPD2PS = 827
    VCVTPD2QQ = 828
    VCVTPD2UDQ = 829
    VCVTPD2UQQ = 830
    VCVTPH2PS = 831
    VCVTPS2DQ = 832
    VCVTPS2PD = 833
    VCVTPS2PH = 834
    VCVTPS2QQ = 835
    VCVTPS2UDQ = 836
    VCVTPS2UQQ = 837
    VCVTQQ2PD = 838
    VCVTQQ2PS = 839
    VCVTSD2SI = 840
    VCVTSD2SS = 841
    VCVTSD2USI = 842
    VCVTSI2SD = 843
    VCVTSI2SS = 844
    VCVTSS2SD = 845
    VCVTSS2SI = 846
    VCVTSS2USI = 847
    VCVTTPD2DQ = 848
    VCVTTPD2QQ = 849
    VCVTTPD2UDQ = 850
    VCVTTPD2UQQ = 851
    VCVTTPS2DQ = 852
    VCVTTPS2QQ = 853
    VCVTTPS2UDQ = 854
    VCVTTPS2UQQ = 855
    VCVTTSD2SI = 856
    VCVTTSD2USI = 857
    VCVTTSS2SI = 858
    VCVTTSS2USI = 859
    VCVTUDQ2PD = 860
    VCVTUDQ2PS = 861
    VCVTUQQ2PD = 862
    VCVTUQQ2PS = 863
    VCVTUSI2SD = 864
    VCVTUSI2SS = 865
    VDBPSADBW = 866
    VDIVPD = 867
    VDIVPS = 868
    VDIVSD = 869
    VDIVSS = 870
    VDPPD = 871
    VDPPS = 872
    VERR = 873
    VERW = 874
    VEXP223PS = 875
    VEXP2PD = 876
    VEXP2PS = 877
    VEXPANDPD = 878
    VEXPANDPS = 879
    VEXTRACTF128 = 880
    VEXTRACTF32X4 = 881
    VEXTRACTF32X8 = 882
    VEXTRACTF64X2 = 883
    VEXTRACTF64X4 = 884
    VEXTRACTI128 = 885
    VEXTRACTI32X4 = 886
    VEXTRACTI32X8 = 887
    VEXTRACTI64X2 = 888
    VEXTRACTI64X4 = 889
    VEXTRACTPS = 890
    VFIXUPIMMPD = 891
    VFIXUPIMMPS = 892
    VFIXUPIMMSD = 893
    VFIXUPIMMSS = 894
    VFIXUPNANPD = 895
    VFIXUPNANPS = 896
    VFMADD132PD = 897
    VFMADD132PS = 898
    VFMADD132SD = 899
    VFMADD132SS = 900
    VFMADD213PD = 901
    VFMADD213PS = 902
    VFMADD213SD = 903
    VFMADD213SS = 904
    VFMADD231PD = 905
    VFMADD231PS = 906
    VFMADD231SD = 907
    VFMADD231SS = 908
    VFMADD233PS = 909
    VFMADDPD = 910
    VFMADDPS = 911
    VFMADDSD = 912
    VFMADDSS = 913
    VFMADDSUB132PD = 914
    VFMADDSUB132PS = 915
    VFMADDSUB213PD = 916
    VFMADDSUB213PS = 917
    VFMADDSUB231PD = 918
    VFMADDSUB231PS = 919
    VFMADDSUBPD = 920
    VFMADDSUBPS = 921
    VFMSUB132PD = 922
    VFMSUB132PS = 923
    VFMSUB132SD = 924
    VFMSUB132SS = 925
    VFMSUB213PD = 926
    VFMSUB213PS = 927
    VFMSUB213SD = 928
    VFMSUB213SS = 929
    VFMSUB231PD = 930
    VFMSUB231PS = 931
    VFMSUB231SD = 932
    VFMSUB231SS = 933
    VFMSUBADD132PD = 934
    VFMSUBADD132PS = 935
    VFMSUBADD213PD = 936
    VFMSUBADD213PS = 937
    VFMSUBADD231PD = 938
    VFMSUBADD231PS = 939
    VFMSUBADDPD = 940
    VFMSUBADDPS = 941
    VFMSUBPD = 942
    VFMSUBPS = 943
    VFMSUBSD = 944
    VFMSUBSS = 945
    VFNMADD132PD = 946
    VFNMADD132PS = 947
    VFNMADD132SD = 948
    VFNMADD132SS = 949
    VFNMADD213PD = 950
    VFNMADD213PS = 951
    VFNMADD213SD = 952
    VFNMADD213SS = 953
    VFNMADD231PD = 954
    VFNMADD231PS = 955
    VFNMADD231SD = 956
    VFNMADD231SS = 957
    VFNMADDPD = 958
    VFNMADDPS = 959
    VFNMADDSD = 960
    VFNMADDSS = 961
    VFNMSUB132PD = 962
    VFNMSUB132PS = 963
    VFNMSUB132SD = 964
    VFNMSUB132SS = 965
    VFNMSUB213PD = 966
    VFNMSUB213PS = 967
    VFNMSUB213SD = 968
    VFNMSUB213SS = 969
    VFNMSUB231PD = 970
    VFNMSUB231PS = 971
    VFNMSUB231SD = 972
    VFNMSUB231SS = 973
    VFNMSUBPD = 974
    VFNMSUBPS = 975
    VFNMSUBSD = 976
    VFNMSUBSS = 977
    VFPCLASSPD = 978
    VFPCLASSPS = 979
    VFPCLASSSD = 980
    VFPCLASSSS = 981
    VFRCZPD = 982
    VFRCZPS = 983
    VFRCZSD = 984
    VFRCZSS = 985
    VGATHERDPD = 986
    VGATHERDPS = 987
    VGATHERPF0DPD = 988
    VGATHERPF0DPS = 989
    VGATHERPF0HINTDPD = 990
    VGATHERPF0HINTDPS = 991
    VGATHERPF0QPD = 992
    VGATHERPF0QPS = 993
    VGATHERPF1DPD = 994
    VGATHERPF1DPS = 995
    VGATHERPF1QPD = 996
    VGATHERPF1QPS = 997
    VGATHERQPD = 998
    VGATHERQPS = 999
    VGETEXPPD = 1000
    VGETEXPPS = 1001
    VGETEXPSD = 1002
    VGETEXPSS = 1003
    VGETMANTPD = 1004
    VGETMANTPS = 1005
    VGETMANTSD = 1006
    VGETMANTSS = 1007
    VGF2P8AFFINEINVQB = 1008
    VGF2P8AFFINEQB = 1009
    VGF2P8MULB = 1010
    VGMAXABSPS = 1011
    VGMAXPD = 1012
    VGMAXPS = 1013
    VGMINPD = 1014
    VGMINPS = 1015
    VHADDPD = 1016
    VHADDPS = 1017
    VHSUBPD = 1018
    VHSUBPS = 1019
    VINSERTF128 = 1020
    VINSERTF32X4 = 1021
    VINSERTF32X8 = 1022
    VINSERTF64X2 = 1023
    VINSERTF64X4 = 1024
    VINSERTI128 = 1025
    VINSERTI32X4 = 1026
    VINSERTI32X8 = 1027
    VINSERTI64X2 = 1028
    VINSERTI64X4 = 1029
    VINSERTPS = 1030
    VLDDQU = 1031
    VLDMXCSR = 1032
    VLOADUNPACKHD = 1033
    VLOADUNPACKHPD = 1034
    VLOADUNPACKHPS = 1035
    VLOADUNPACKHQ = 1036
    VLOADUNPACKLD = 1037
    VLOADUNPACKLPD = 1038
    VLOADUNPACKLPS = 1039
    VLOADUNPACKLQ = 1040
    VLOG2PS = 1041
    VMASKMOVDQU = 1042
    VMASKMOVPD = 1043
    VMASKMOVPS = 1044
    VMAXPD = 1045
    VMAXPS = 1046
    VMAXSD = 1047
    VMAXSS = 1048
    VMCALL = 1049
    VMCLEAR = 1050
    VMFUNC = 1051
    VMINPD = 1052
    VMINPS = 1053
    VMINSD = 1054
    VMINSS = 1055
    VMLAUNCH = 1056
    VMLOAD = 1057
    VMMCALL = 1058
    VMOVAPD = 1059
    VMOVAPS = 1060
    VMOVD = 1061
    VMOVDDUP = 1062
    VMOVDQA = 1063
    VMOVDQA32 = 1064
    VMOVDQA64 = 1065
    VMOVDQU = 1066
    VMOVDQU16 = 1067
    VMOVDQU32 = 1068
    VMOVDQU64 = 1069
    VMOVDQU8 = 1070
    VMOVHLPS = 1071
    VMOVHPD = 1072
    VMOVHPS = 1073
    VMOVLHPS = 1074
    VMOVLPD = 1075
    VMOVLPS = 1076
    VMOVMSKPD = 1077
    VMOVMSKPS = 1078
    VMOVNRAPD = 1079
    VMOVNRAPS = 1080
    VMOVNRNGOAPD = 1081
    VMOVNRNGOAPS = 1082
    VMOVNTDQ = 1083
    VMOVNTDQA = 1084
    VMOVNTPD = 1085
    VMOVNTPS = 1086
    VMOVQ = 1087
    VMOVSD = 1088
    VMOVSHDUP = 1089
    VMOVSLDUP = 1090
    VMOVSS = 1091
    VMOVUPD = 1092
    VMOVUPS = 1093
    VMPSADBW = 1094
    VMPTRLD = 1095
    VMPTRST = 1096
    VMREAD = 1097
    VMRESUME = 1098
    VMRUN = 1099
    VMSAVE = 1100
    VMULPD = 1101
    VMULPS = 1102
    VMULSD = 1103
    VMULSS = 1104
    VMWRITE = 1105
    VMXOFF = 1106
    VMXON = 1107
    VORPD = 1108
    VORPS = 1109
    VP4DPWSSD = 1110
    VP4DPWSSDS = 1111
    VPABSB = 1112
    VPABSD = 1113
    VPABSQ = 1114
    VPABSW = 1115
    VPACKSSDW = 1116
    VPACKSSWB = 1117
    VPACKSTOREHD = 1118
    VPACKSTOREHPD = 1119
    VPACKSTOREHPS = 1120
    VPACKSTOREHQ = 1121
    VPACKSTORELD = 1122
    VPACKSTORELPD = 1123
    VPACKSTORELPS = 1124
    VPACKSTORELQ = 1125
    VPACKUSDW = 1126
    VPACKUSWB = 1127
    VPADCD = 1128
    VPADDB = 1129
    VPADDD = 1130
    VPADDQ = 1131
    VPADDSB = 1132
    VPADDSETCD = 1133
    VPADDSETSD = 1134
    VPADDSW = 1135
    VPADDUSB = 1136
    VPADDUSW = 1137
    VPADDW = 1138
    VPALIGNR = 1139
    VPAND = 1140
    VPANDD = 1141
    VPANDN = 1142
    VPANDND = 1143
    VPANDNQ = 1144
    VPANDQ = 1145
    VPAVGB = 1146
    VPAVGW = 1147
    VPBLENDD = 1148
    VPBLENDMB = 1149
    VPBLENDMD = 1150
    VPBLENDMQ = 1151
    VPBLENDMW = 1152
    VPBLENDVB = 1153
    VPBLENDW = 1154
    VPBROADCASTB = 1155
    VPBROADCASTD = 1156
    VPBROADCASTMB2Q = 1157
    VPBROADCASTMW2D = 1158
    VPBROADCASTQ = 1159
    VPBROADCASTW = 1160
    VPCLMULQDQ = 1161
    VPCMOV = 1162
    VPCMPB = 1163
    VPCMPD = 1164
    VPCMPEQB = 1165
    VPCMPEQD = 1166
    VPCMPEQQ = 1167
    VPCMPEQW = 1168
    VPCMPESTRI = 1169
    VPCMPESTRM = 1170
    VPCMPGTB = 1171
    VPCMPGTD = 1172
    VPCMPGTQ = 1173
    VPCMPGTW = 1174
    VPCMPISTRI = 1175
    VPCMPISTRM = 1176
    VPCMPLTD = 1177
    VPCMPQ = 1178
    VPCMPUB = 1179
    VPCMPUD = 1180
    VPCMPUQ = 1181
    VPCMPUW = 1182
    VPCMPW = 1183
    VPCOMB = 1184
    VPCOMD = 1185
    VPCOMPRESSB = 1186
    VPCOMPRESSD = 1187
    VPCOMPRESSQ = 1188
    VPCOMPRESSW = 1189
    VPCOMQ = 1190
    VPCOMUB = 1191
    VPCOMUD = 1192
    VPCOMUQ = 1193
    VPCOMUW = 1194
    VPCOMW = 1195
    VPCONFLICTD = 1196
    VPCONFLICTQ = 1197
    VPDPBUSD = 1198
    VPDPBUSDS = 1199
    VPDPWSSD = 1200
    VPDPWSSDS = 1201
    VPERM2F128 = 1202
    VPERM2I128 = 1203
    VPERMB = 1204
    VPERMD = 1205
    VPERMF32X4 = 1206
    VPERMI2B = 1207
    VPERMI2D = 1208
    VPERMI2PD = 1209
    VPERMI2PS = 1210
    VPERMI2Q = 1211
    VPERMI2W = 1212
    VPERMIL2PD = 1213
    VPERMIL2PS = 1214
    VPERMILPD = 1215
    VPERMILPS = 1216
    VPERMPD = 1217
    VPERMPS = 1218
    VPERMQ = 1219
    VPERMT2B = 1220
    VPERMT2D = 1221
    VPERMT2PD = 1222
    VPERMT2PS = 1223
    VPERMT2Q = 1224
    VPERMT2W = 1225
    VPERMW = 1226
    VPEXPANDB = 1227
    VPEXPANDD = 1228
    VPEXPANDQ = 1229
    VPEXPANDW = 1230
    VPEXTRB = 1231
    VPEXTRD = 1232
    VPEXTRQ = 1233
    VPEXTRW = 1234
    VPGATHERDD = 1235
    VPGATHERDQ = 1236
    VPGATHERQD = 1237
    VPGATHERQQ = 1238
    VPHADDBD = 1239
    VPHADDBQ = 1240
    VPHADDBW = 1241
    VPHADDD = 1242
    VPHADDDQ = 1243
    VPHADDSW = 1244
    VPHADDUBD = 1245
    VPHADDUBQ = 1246
    VPHADDUBW = 1247
    VPHADDUDQ = 1248
    VPHADDUWD = 1249
    VPHADDUWQ = 1250
    VPHADDW = 1251
    VPHADDWD = 1252
    VPHADDWQ = 1253
    VPHMINPOSUW = 1254
    VPHSUBBW = 1255
    VPHSUBD = 1256
    VPHSUBDQ = 1257
    VPHSUBSW = 1258
    VPHSUBW = 1259
    VPHSUBWD = 1260
    VPINSRB = 1261
    VPINSRD = 1262
    VPINSRQ = 1263
    VPINSRW = 1264
    VPLZCNTD = 1265
    VPLZCNTQ = 1266
    VPMACSDD = 1267
    VPMACSDQH = 1268
    VPMACSDQL = 1269
    VPMACSSDD = 1270
    VPMACSSDQH = 1271
    VPMACSSDQL = 1272
    VPMACSSWD = 1273
    VPMACSSWW = 1274
    VPMACSWD = 1275
    VPMACSWW = 1276
    VPMADCSSWD = 1277
    VPMADCSWD = 1278
    VPMADD231D = 1279
    VPMADD233D = 1280
    VPMADD52HUQ = 1281
    VPMADD52LUQ = 1282
    VPMADDUBSW = 1283
    VPMADDWD = 1284
    VPMASKMOVD = 1285
    VPMASKMOVQ = 1286
    VPMAXSB = 1287
    VPMAXSD = 1288
    VPMAXSQ = 1289
    VPMAXSW = 1290
    VPMAXUB = 1291
    VPMAXUD = 1292
    VPMAXUQ = 1293
    VPMAXUW = 1294
    VPMINSB = 1295
    VPMINSD = 1296
    VPMINSQ = 1297
    VPMINSW = 1298
    VPMINUB = 1299
    VPMINUD = 1300
    VPMINUQ = 1301
    VPMINUW = 1302
    VPMOVB2M = 1303
    VPMOVD2M = 1304
    VPMOVDB = 1305
    VPMOVDW = 1306
    VPMOVM2B = 1307
    VPMOVM2D = 1308
    VPMOVM2Q = 1309
    VPMOVM2W = 1310
    VPMOVMSKB = 1311
    VPMOVQ2M = 1312
    VPMOVQB = 1313
    VPMOVQD = 1314
    VPMOVQW = 1315
    VPMOVSDB = 1316
    VPMOVSDW = 1317
    VPMOVSQB = 1318
    VPMOVSQD = 1319
    VPMOVSQW = 1320
    VPMOVSWB = 1321
    VPMOVSXBD = 1322
    VPMOVSXBQ = 1323
    VPMOVSXBW = 1324
    VPMOVSXDQ = 1325
    VPMOVSXWD = 1326
    VPMOVSXWQ = 1327
    VPMOVUSDB = 1328
    VPMOVUSDW = 1329
    VPMOVUSQB = 1330
    VPMOVUSQD = 1331
    VPMOVUSQW = 1332
    VPMOVUSWB = 1333
    VPMOVW2M = 1334
    VPMOVWB = 1335
    VPMOVZXBD = 1336
    VPMOVZXBQ = 1337
    VPMOVZXBW = 1338
    VPMOVZXDQ = 1339
    VPMOVZXWD = 1340
    VPMOVZXWQ = 1341
    VPMULDQ = 1342
    VPMULHD = 1343
    VPMULHRSW = 1344
    VPMULHUD = 1345
    VPMULHUW = 1346
    VPMULHW = 1347
    VPMULLD = 1348
    VPMULLQ = 1349
    VPMULLW = 1350
    VPMULTISHIFTQB = 1351
    VPMULUDQ = 1352
    VPOPCNTB = 1353
    VPOPCNTD = 1354
    VPOPCNTQ = 1355
    VPOPCNTW = 1356
    VPOR = 1357
    VPORD = 1358
    VPORQ = 1359
    VPPERM = 1360
    VPREFETCH0 = 1361
    VPREFETCH1 = 1362
    VPREFETCH2 = 1363
    VPREFETCHE0 = 1364
    VPREFETCHE1 = 1365
    VPREFETCHE2 = 1366
    VPREFETCHENTA = 1367
    VPREFETCHNTA = 1368
    VPROLD = 1369
    VPROLQ = 1370
    VPROLVD = 1371
    VPROLVQ = 1372
    VPRORD = 1373
    VPRORQ = 1374
    VPRORVD = 1375
    VPRORVQ = 1376
    VPROTB = 1377
    VPROTD = 1378
    VPROTQ = 1379
    VPROTW = 1380
    VPSADBW = 1381
    VPSBBD = 1382
    VPSBBRD = 1383
    VPSCATTERDD = 1384
    VPSCATTERDQ = 1385
    VPSCATTERQD = 1386
    VPSCATTERQQ = 1387
    VPSHAB = 1388
    VPSHAD = 1389
    VPSHAQ = 1390
    VPSHAW = 1391
    VPSHLB = 1392
    VPSHLD = 1393
    VPSHLDD = 1394
    VPSHLDQ = 1395
    VPSHLDVD = 1396
    VPSHLDVQ = 1397
    VPSHLDVW = 1398
    VPSHLDW = 1399
    VPSHLQ = 1400
    VPSHLW = 1401
    VPSHRDD = 1402
    VPSHRDQ = 1403
    VPSHRDVD = 1404
    VPSHRDVQ = 1405
    VPSHRDVW = 1406
    VPSHRDW = 1407
    VPSHUFB = 1408
    VPSHUFBITQMB = 1409
    VPSHUFD = 1410
    VPSHUFHW = 1411
    VPSHUFLW = 1412
    VPSIGNB = 1413
    VPSIGND = 1414
    VPSIGNW = 1415
    VPSLLD = 1416
    VPSLLDQ = 1417
    VPSLLQ = 1418
    VPSLLVD = 1419
    VPSLLVQ = 1420
    VPSLLVW = 1421
    VPSLLW = 1422
    VPSRAD = 1423
    VPSRAQ = 1424
    VPSRAVD = 1425
    VPSRAVQ = 1426
    VPSRAVW = 1427
    VPSRAW = 1428
    VPSRLD = 1429
    VPSRLDQ = 1430
    VPSRLQ = 1431
    VPSRLVD = 1432
    VPSRLVQ = 1433
    VPSRLVW = 1434
    VPSRLW = 1435
    VPSUBB = 1436
    VPSUBD = 1437
    VPSUBQ = 1438
    VPSUBRD = 1439
    VPSUBRSETBD = 1440
    VPSUBSB = 1441
    VPSUBSETBD = 1442
    VPSUBSW = 1443
    VPSUBUSB = 1444
    VPSUBUSW = 1445
    VPSUBW = 1446
    VPTERNLOGD = 1447
    VPTERNLOGQ = 1448
    VPTEST = 1449
    VPTESTMB = 1450
    VPTESTMD = 1451
    VPTESTMQ = 1452
    VPTESTMW = 1453
    VPTESTNMB = 1454
    VPTESTNMD = 1455
    VPTESTNMQ = 1456
    VPTESTNMW = 1457
    VPUNPCKHBW = 1458
    VPUNPCKHDQ = 1459
    VPUNPCKHQDQ = 1460
    VPUNPCKHWD = 1461
    VPUNPCKLBW = 1462
    VPUNPCKLDQ = 1463
    VPUNPCKLQDQ = 1464
    VPUNPCKLWD = 1465
    VPXOR = 1466
    VPXORD = 1467
    VPXORQ = 1468
    VRANGEPD = 1469
    VRANGEPS = 1470
    VRANGESD = 1471
    VRANGESS = 1472
    VRCP14PD = 1473
    VRCP14PS = 1474
    VRCP14SD = 1475
    VRCP14SS = 1476
    VRCP23PS = 1477
    VRCP28PD = 1478
    VRCP28PS = 1479
    VRCP28SD = 1480
    VRCP28SS = 1481
    VRCPPS = 1482
    VRCPSS = 1483
    VREDUCEPD = 1484
    VREDUCEPS = 1485
    VREDUCESD = 1486
    VREDUCESS = 1487
    VRNDFXPNTPD = 1488
    VRNDFXPNTPS = 1489
    VRNDSCALEPD = 1490
    VRNDSCALEPS = 1491
    VRNDSCALESD = 1492
    VRNDSCALESS = 1493
    VROUNDPD = 1494
    VROUNDPS = 1495
    VROUNDSD = 1496
    VROUNDSS = 1497
    VRSQRT14PD = 1498
    VRSQRT14PS = 1499
    VRSQRT14SD = 1500
    VRSQRT14SS = 1501
    VRSQRT23PS = 1502
    VRSQRT28PD = 1503
    VRSQRT28PS = 1504
    VRSQRT28SD = 1505
    VRSQRT28SS = 1506
    VRSQRTPS = 1507
    VRSQRTSS = 1508
    VSCALEFPD = 1509
    VSCALEFPS = 1510
    VSCALEFSD = 1511
    VSCALEFSS = 1512
    VSCALEPS = 1513
    VSCATTERDPD = 1514
    VSCATTERDPS = 1515
    VSCATTERPF0DPD = 1516
    VSCATTERPF0DPS = 1517
    VSCATTERPF0HINTDPD = 1518
    VSCATTERPF0HINTDPS = 1519
    VSCATTERPF0QPD = 1520
    VSCATTERPF0QPS = 1521
    VSCATTERPF1DPD = 1522
    VSCATTERPF1DPS = 1523
    VSCATTERPF1QPD = 1524
    VSCATTERPF1QPS = 1525
    VSCATTERQPD = 1526
    VSCATTERQPS = 1527
    VSHUFF32X4 = 1528
    VSHUFF64X2 = 1529
    VSHUFI32X4 = 1530
    VSHUFI64X2 = 1531
    VSHUFPD = 1532
    VSHUFPS = 1533
    VSQRTPD = 1534
    VSQRTPS = 1535
    VSQRTSD = 1536
    VSQRTSS = 1537
    VSTMXCSR = 1538
    VSUBPD = 1539
    VSUBPS = 1540
    VSUBRPD = 1541
    VSUBRPS = 1542
    VSUBSD = 1543
    VSUBSS = 1544
    VTESTPD = 1545
    VTESTPS = 1546
    VUCOMISD = 1547
    VUCOMISS = 1548
    VUNPCKHPD = 1549
    VUNPCKHPS = 1550
    VUNPCKLPD = 1551
    VUNPCKLPS = 1552
    VXORPD = 1553
    VXORPS = 1554
    VZEROALL = 1555
    VZEROUPPER = 1556
    WBINVD = 1557
    WRFSBASE = 1558
    WRGSBASE = 1559
    WRMSR = 1560
    WRPKRU = 1561
    WRSSD = 1562
    WRSSQ = 1563
    WRUSSD = 1564
    WRUSSQ = 1565
    XABORT = 1566
    XADD = 1567
    XBEGIN = 1568
    XCHG = 1569
    XCRYPT_CBC = 1570
    XCRYPT_CFB = 1571
    XCRYPT_CTR = 1572
    XCRYPT_ECB = 1573
    XCRYPT_OFB = 1574
    XEND = 1575
    XGETBV = 1576
    XLAT = 1577
    XOR = 1578
    XORPD = 1579
    XORPS = 1580
    XRSTOR = 1581
    XRSTOR64 = 1582
    XRSTORS = 1583
    XRSTORS64 = 1584
    XSAVE = 1585
    XSAVE64 = 1586
    XSAVEC = 1587
    XSAVEC64 = 1588
    XSAVEOPT = 1589
    XSAVEOPT64 = 1590
    XSAVES = 1591
    XSAVES64 = 1592
    XSETBV = 1593
    XSHA1 = 1594
    XSHA256 = 1595
    XSTORE = 1596
    XTEST = 1597
    # Maximum value of this enum.
    MAX_VALUE = 1597


class MachineMode(IntEnum):
    """Defines the `ZydisMachineMode` enum."""
    # 64 bit mode.
    LONG_64 = 0
    # 32 bit protected mode.
    LONG_COMPAT_32 = 1
    # 16 bit protected mode.
    LONG_COMPAT_16 = 2
    # 32 bit protected mode.
    LEGACY_32 = 3
    # 16 bit protected mode.
    LEGACY_16 = 4
    # 16 bit real mode.
    REAL_16 = 5
    # Maximum value of this enum.
    MAX_VALUE = 5


class AddressWidth(IntEnum):
    """Defines the `ZydisAddressWidth` enum."""
    _16 = 0
    _32 = 1
    _64 = 2
    # Maximum value of this enum.
    MAX_VALUE = 2


class ElementType(IntEnum):
    """Defines the `ZydisElementType` enum."""
    INVALID = 0
    # A struct type.
    STRUCT = 1
    # Unsigned integer value.
    UINT = 2
    # Signed integer value.
    INT = 3
    # 16-bit floating point value (`half`).
    FLOAT16 = 4
    # 32-bit floating point value (`single`).
    FLOAT32 = 5
    # 64-bit floating point value (`double`).
    FLOAT64 = 6
    # 80-bit floating point value (`extended`).
    FLOAT80 = 7
    # Binary coded decimal value.
    LONGBCD = 8
    # A condition code (e.g. used by `CMPPD`, `VCMPPD`, ...).
    CC = 9
    # Maximum value of this enum.
    MAX_VALUE = 9


class OperandType(IntEnum):
    """Defines the `ZydisOperandType` enum."""
    # The operand is not used.
    UNUSED = 0
    # The operand is a register operand.
    REGISTER = 1
    # The operand is a memory operand.
    MEMORY = 2
    # The operand is a pointer operand with a segment:offset lvalue.
    POINTER = 3
    # The operand is an immediate operand.
    IMMEDIATE = 4
    # Maximum value of this enum.
    MAX_VALUE = 4


class OperandEncoding(IntEnum):
    """Defines the `ZydisOperandEncoding` enum."""
    NONE = 0
    MODRM_REG = 1
    MODRM_RM = 2
    OPCODE = 3
    NDSNDD = 4
    IS4 = 5
    MASK = 6
    DISP8 = 7
    DISP16 = 8
    DISP32 = 9
    DISP64 = 10
    DISP16_32_64 = 11
    DISP32_32_64 = 12
    DISP16_32_32 = 13
    UIMM8 = 14
    UIMM16 = 15
    UIMM32 = 16
    UIMM64 = 17
    UIMM16_32_64 = 18
    UIMM32_32_64 = 19
    UIMM16_32_32 = 20
    SIMM8 = 21
    SIMM16 = 22
    SIMM32 = 23
    SIMM64 = 24
    SIMM16_32_64 = 25
    SIMM32_32_64 = 26
    SIMM16_32_32 = 27
    JIMM8 = 28
    JIMM16 = 29
    JIMM32 = 30
    JIMM64 = 31
    JIMM16_32_64 = 32
    JIMM32_32_64 = 33
    JIMM16_32_32 = 34
    # Maximum value of this enum.
    MAX_VALUE = 34


class OperandVisibility(IntEnum):
    """Defines the `ZydisOperandVisibility` enum."""
    INVALID = 0
    # The operand is explicitly encoded in the instruction.
    EXPLICIT = 1
    # The operand is part of the opcode, but listed as an operand.
    IMPLICIT = 2
    # The operand is part of the opcode, and not typically listed as an operand.
    HIDDEN = 3
    # Maximum value of this enum.
    MAX_VALUE = 3


class OperandAction(IntEnum):
    """Defines the `ZydisOperandAction` enum."""
    # The operand is read by the instruction.
    READ = 1
    # The operand is written by the instruction (must write).
    WRITE = 2
    # The operand is conditionally read by the instruction.
    CONDREAD = 4
    # The operand is conditionally written by the instruction (may write).
    CONDWRITE = 8
    # The operand is read (must read) and written by the instruction (must write).
    READWRITE = 3
    # The operand is conditionally read (may read) and conditionally written by the instruction (may write).
    CONDREAD_CONDWRITE = 12
    # The operand is read (must read) and conditionally written by the instruction (may write).
    READ_CONDWRITE = 9
    # The operand is written (must write) and conditionally read by the instruction (may read).
    CONDREAD_WRITE = 6
    # Mask combining all reading access flags.
    MASK_READ = 5
    # Mask combining all writing access flags.
    MASK_WRITE = 10


class InstructionEncoding(IntEnum):
    """Defines the `ZydisInstructionEncoding` enum."""
    # The instruction uses the legacy encoding.
    LEGACY = 0
    # The instruction uses the AMD 3DNow-encoding.
    _3DNOW = 1
    # The instruction uses the AMD XOP-encoding.
    XOP = 2
    # The instruction uses the VEX-encoding.
    VEX = 3
    # The instruction uses the EVEX-encoding.
    EVEX = 4
    # The instruction uses the MVEX-encoding.
    MVEX = 5
    # Maximum value of this enum.
    MAX_VALUE = 5


class OpcodeMap(IntEnum):
    """Defines the `ZydisOpcodeMap` enum."""
    DEFAULT = 0
    _0F = 1
    _0F38 = 2
    _0F3A = 3
    _0F0F = 4
    XOP8 = 5
    XOP9 = 6
    XOPA = 7
    # Maximum value of this enum.
    MAX_VALUE = 7


class Register(IntEnum):
    """Defines the `ZydisRegister` enum."""
    NONE = 0
    AL = 1
    CL = 2
    DL = 3
    BL = 4
    AH = 5
    CH = 6
    DH = 7
    BH = 8
    SPL = 9
    BPL = 10
    SIL = 11
    DIL = 12
    R8B = 13
    R9B = 14
    R10B = 15
    R11B = 16
    R12B = 17
    R13B = 18
    R14B = 19
    R15B = 20
    AX = 21
    CX = 22
    DX = 23
    BX = 24
    SP = 25
    BP = 26
    SI = 27
    DI = 28
    R8W = 29
    R9W = 30
    R10W = 31
    R11W = 32
    R12W = 33
    R13W = 34
    R14W = 35
    R15W = 36
    EAX = 37
    ECX = 38
    EDX = 39
    EBX = 40
    ESP = 41
    EBP = 42
    ESI = 43
    EDI = 44
    R8D = 45
    R9D = 46
    R10D = 47
    R11D = 48
    R12D = 49
    R13D = 50
    R14D = 51
    R15D = 52
    RAX = 53
    RCX = 54
    RDX = 55
    RBX = 56
    RSP = 57
    RBP = 58
    RSI = 59
    RDI = 60
    R8 = 61
    R9 = 62
    R10 = 63
    R11 = 64
    R12 = 65
    R13 = 66
    R14 = 67
    R15 = 68
    ST0 = 69
    ST1 = 70
    ST2 = 71
    ST3 = 72
    ST4 = 73
    ST5 = 74
    ST6 = 75
    ST7 = 76
    X87CONTROL = 77
    X87STATUS = 78
    X87TAG = 79
    MM0 = 80
    MM1 = 81
    MM2 = 82
    MM3 = 83
    MM4 = 84
    MM5 = 85
    MM6 = 86
    MM7 = 87
    XMM0 = 88
    XMM1 = 89
    XMM2 = 90
    XMM3 = 91
    XMM4 = 92
    XMM5 = 93
    XMM6 = 94
    XMM7 = 95
    XMM8 = 96
    XMM9 = 97
    XMM10 = 98
    XMM11 = 99
    XMM12 = 100
    XMM13 = 101
    XMM14 = 102
    XMM15 = 103
    XMM16 = 104
    XMM17 = 105
    XMM18 = 106
    XMM19 = 107
    XMM20 = 108
    XMM21 = 109
    XMM22 = 110
    XMM23 = 111
    XMM24 = 112
    XMM25 = 113
    XMM26 = 114
    XMM27 = 115
    XMM28 = 116
    XMM29 = 117
    XMM30 = 118
    XMM31 = 119
    YMM0 = 120
    YMM1 = 121
    YMM2 = 122
    YMM3 = 123
    YMM4 = 124
    YMM5 = 125
    YMM6 = 126
    YMM7 = 127
    YMM8 = 128
    YMM9 = 129
    YMM10 = 130
    YMM11 = 131
    YMM12 = 132
    YMM13 = 133
    YMM14 = 134
    YMM15 = 135
    YMM16 = 136
    YMM17 = 137
    YMM18 = 138
    YMM19 = 139
    YMM20 = 140
    YMM21 = 141
    YMM22 = 142
    YMM23 = 143
    YMM24 = 144
    YMM25 = 145
    YMM26 = 146
    YMM27 = 147
    YMM28 = 148
    YMM29 = 149
    YMM30 = 150
    YMM31 = 151
    ZMM0 = 152
    ZMM1 = 153
    ZMM2 = 154
    ZMM3 = 155
    ZMM4 = 156
    ZMM5 = 157
    ZMM6 = 158
    ZMM7 = 159
    ZMM8 = 160
    ZMM9 = 161
    ZMM10 = 162
    ZMM11 = 163
    ZMM12 = 164
    ZMM13 = 165
    ZMM14 = 166
    ZMM15 = 167
    ZMM16 = 168
    ZMM17 = 169
    ZMM18 = 170
    ZMM19 = 171
    ZMM20 = 172
    ZMM21 = 173
    ZMM22 = 174
    ZMM23 = 175
    ZMM24 = 176
    ZMM25 = 177
    ZMM26 = 178
    ZMM27 = 179
    ZMM28 = 180
    ZMM29 = 181
    ZMM30 = 182
    ZMM31 = 183
    FLAGS = 184
    EFLAGS = 185
    RFLAGS = 186
    IP = 187
    EIP = 188
    RIP = 189
    ES = 190
    CS = 191
    SS = 192
    DS = 193
    FS = 194
    GS = 195
    GDTR = 196
    LDTR = 197
    IDTR = 198
    TR = 199
    TR0 = 200
    TR1 = 201
    TR2 = 202
    TR3 = 203
    TR4 = 204
    TR5 = 205
    TR6 = 206
    TR7 = 207
    CR0 = 208
    CR1 = 209
    CR2 = 210
    CR3 = 211
    CR4 = 212
    CR5 = 213
    CR6 = 214
    CR7 = 215
    CR8 = 216
    CR9 = 217
    CR10 = 218
    CR11 = 219
    CR12 = 220
    CR13 = 221
    CR14 = 222
    CR15 = 223
    DR0 = 224
    DR1 = 225
    DR2 = 226
    DR3 = 227
    DR4 = 228
    DR5 = 229
    DR6 = 230
    DR7 = 231
    DR8 = 232
    DR9 = 233
    DR10 = 234
    DR11 = 235
    DR12 = 236
    DR13 = 237
    DR14 = 238
    DR15 = 239
    K0 = 240
    K1 = 241
    K2 = 242
    K3 = 243
    K4 = 244
    K5 = 245
    K6 = 246
    K7 = 247
    BND0 = 248
    BND1 = 249
    BND2 = 250
    BND3 = 251
    BNDCFG = 252
    BNDSTATUS = 253
    MXCSR = 254
    PKRU = 255
    XCR0 = 256
    # Maximum value of this enum.
    MAX_VALUE = 256


class RegisterClass(IntEnum):
    """Defines the `ZydisRegisterClass` enum."""
    INVALID = 0
    # 8-bit general-purpose registers.
    GPR8 = 1
    # 16-bit general-purpose registers.
    GPR16 = 2
    # 32-bit general-purpose registers.
    GPR32 = 3
    # 64-bit general-purpose registers.
    GPR64 = 4
    # Floating point legacy registers.
    X87 = 5
    # Floating point multimedia registers.
    MMX = 6
    # 128-bit vector registers.
    XMM = 7
    # 256-bit vector registers.
    YMM = 8
    # 512-bit vector registers.
    ZMM = 9
    # Flags registers.
    FLAGS = 10
    # Instruction-pointer registers.
    IP = 11
    # Segment registers.
    SEGMENT = 12
    # Test registers.
    TEST = 13
    # Control registers.
    CONTROL = 14
    # Debug registers.
    DEBUG = 15
    # Mask registers.
    MASK = 16
    # Bound registers.
    BOUND = 17
    # Maximum value of this enum.
    MAX_VALUE = 17


class MemoryOperandType(IntEnum):
    """Defines the `ZydisMemoryOperandType` enum."""
    INVALID = 0
    # Normal memory operand.
    MEM = 1
    # The memory operand is only used for address-generation. No real memory-access is caused.
    AGEN = 2
    # A memory operand using `SIB` addressing form, where the index register is not used in address calculation and scale is ignored. No real memory-access is caused.
    MIB = 3
    # Maximum value of this enum.
    MAX_VALUE = 3


class CPUFlag(IntEnum):
    """Defines the `ZydisCPUFlag` enum."""
    # Carry flag.
    CF = 0
    # Parity flag.
    PF = 1
    # Adjust flag.
    AF = 2
    # Zero flag.
    ZF = 3
    # Sign flag.
    SF = 4
    # Trap flag.
    TF = 5
    # Interrupt enable flag.
    _IF = 6
    # Direction flag.
    DF = 7
    # Overflow flag.
    OF = 8
    # I/O privilege level flag.
    IOPL = 9
    # Nested task flag.
    NT = 10
    # Resume flag.
    RF = 11
    # Virtual 8086 mode flag.
    VM = 12
    # Alignment check.
    AC = 13
    # Virtual interrupt flag.
    VIF = 14
    # Virtual interrupt pending.
    VIP = 15
    # Able to use CPUID instruction.
    ID = 16
    # FPU condition-code flag 0.
    C0 = 17
    # FPU condition-code flag 1.
    C1 = 18
    # FPU condition-code flag 2.
    C2 = 19
    # FPU condition-code flag 3.
    C3 = 20
    # Maximum value of this enum.
    MAX_VALUE = 20


class CPUFlagAction(IntEnum):
    """Defines the `ZydisCPUFlagAction` enum."""
    # The CPU flag is not touched by the instruction.
    NONE = 0
    # The CPU flag is tested (read).
    TESTED = 1
    # The CPU flag is tested and modified aferwards (read-write).
    TESTED_MODIFIED = 2
    # The CPU flag is modified (write).
    MODIFIED = 3
    # The CPU flag is set to 0 (write).
    SET_0 = 4
    # The CPU flag is set to 1 (write).
    SET_1 = 5
    # The CPU flag is undefined (write).
    UNDEFINED = 6
    # Maximum value of this enum.
    MAX_VALUE = 6


class BranchType(IntEnum):
    """Defines the `ZydisBranchType` enum."""
    # The instruction is not a branch instruction.
    NONE = 0
    # The instruction is a short (8-bit) branch instruction.
    SHORT = 1
    # The instruction is a near (16-bit or 32-bit) branch instruction.
    NEAR = 2
    # The instruction is a far (intersegment) branch instruction.
    FAR = 3
    # Maximum value of this enum.
    MAX_VALUE = 3


class ExceptionClass(IntEnum):
    """Defines the `ZydisExceptionClass` enum."""
    NONE = 0
    SSE1 = 1
    SSE2 = 2
    SSE3 = 3
    SSE4 = 4
    SSE5 = 5
    SSE7 = 6
    AVX1 = 7
    AVX2 = 8
    AVX3 = 9
    AVX4 = 10
    AVX5 = 11
    AVX6 = 12
    AVX7 = 13
    AVX8 = 14
    AVX11 = 15
    AVX12 = 16
    E1 = 17
    E1NF = 18
    E2 = 19
    E2NF = 20
    E3 = 21
    E3NF = 22
    E4 = 23
    E4NF = 24
    E5 = 25
    E5NF = 26
    E6 = 27
    E6NF = 28
    E7NM = 29
    E7NM128 = 30
    E9NF = 31
    E10 = 32
    E10NF = 33
    E11 = 34
    E11NF = 35
    E12 = 36
    E12NP = 37
    K20 = 38
    K21 = 39
    # Maximum value of this enum.
    MAX_VALUE = 39


class MaskMode(IntEnum):
    """Defines the `ZydisMaskMode` enum."""
    INVALID = 0
    # Masking is disabled for the current instruction (`K0` register is used).
    DISABLED = 1
    # The embedded mask register is used as a merge-mask.
    MERGING = 2
    # The embedded mask register is used as a zero-mask.
    ZEROING = 3
    # The embedded mask register is used as a control-mask (element selector).
    CONTROL = 4
    # The embedded mask register is used as a zeroing control-mask (element selector).
    CONTROL_ZEROING = 5
    # Maximum value of this enum.
    MAX_VALUE = 5


class BroadcastMode(IntEnum):
    """Defines the `ZydisBroadcastMode` enum."""
    INVALID = 0
    _1_TO_2 = 1
    _1_TO_4 = 2
    _1_TO_8 = 3
    _1_TO_16 = 4
    _1_TO_32 = 5
    _1_TO_64 = 6
    _2_TO_4 = 7
    _2_TO_8 = 8
    _2_TO_16 = 9
    _4_TO_8 = 10
    _4_TO_16 = 11
    _8_TO_16 = 12
    # Maximum value of this enum.
    MAX_VALUE = 12


class RoundingMode(IntEnum):
    """Defines the `ZydisRoundingMode` enum."""
    INVALID = 0
    # Round to nearest.
    RN = 1
    # Round down.
    RD = 2
    # Round up.
    RU = 3
    # Round towards zero.
    RZ = 4
    # Maximum value of this enum.
    MAX_VALUE = 4


class SwizzleMode(IntEnum):
    """Defines the `ZydisSwizzleMode` enum."""
    INVALID = 0
    DCBA = 1
    CDAB = 2
    BADC = 3
    DACB = 4
    AAAA = 5
    BBBB = 6
    CCCC = 7
    DDDD = 8
    # Maximum value of this enum.
    MAX_VALUE = 8


class ConversionMode(IntEnum):
    """Defines the `ZydisConversionMode` enum."""
    INVALID = 0
    FLOAT16 = 1
    SINT8 = 2
    UINT8 = 3
    SINT16 = 4
    UINT16 = 5
    # Maximum value of this enum.
    MAX_VALUE = 5


class PrefixType(IntEnum):
    """Defines the `ZydisPrefixType` enum."""
    # The prefix is ignored by the instruction.
    IGNORED = 0
    # The prefix is effectively used by the instruction.
    EFFECTIVE = 1
    # The prefix is used as a mandatory prefix.
    MANDATORY = 2
    # Maximum value of this enum.
    MAX_VALUE = 2


class DecoderMode(IntEnum):
    """Defines the `ZydisDecoderMode` enum."""
    # Enables minimal instruction decoding without semantic analysis.
    MINIMAL = 0
    # Enables the `AMD`-branch mode.
    AMD_BRANCHES = 1
    # Enables `KNC` compatibility-mode.
    KNC = 2
    # Enables the `MPX` mode.
    MPX = 3
    # Enables the `CET` mode.
    CET = 4
    # Enables the `LZCNT` mode.
    LZCNT = 5
    # Enables the `TZCNT` mode.
    TZCNT = 6
    # Enables the `WBNOINVD` mode.
    WBNOINVD = 7
    # Enables the `CLDEMOTE` mode.
    CLDEMOTE = 8
    # Maximum value of this enum.
    MAX_VALUE = 8


class FormatterStyle(IntEnum):
    """Defines the `ZydisFormatterStyle` enum."""
    # Generates `AT&T`-style disassembly.
    ATT = 0
    # Generates `Intel`-style disassembly.
    INTEL = 1
    # Generates `MASM`-style disassembly that is directly accepted as input for the `MASM` assembler.
    INTEL_MASM = 2
    # Maximum value of this enum.
    MAX_VALUE = 2


class FormatterProperty(IntEnum):
    """Defines the `ZydisFormatterProperty` enum."""
    # Controls the printing of effective operand-size suffixes (`AT&T`) or operand-sizes of memory operands (`INTEL`).
    FORCE_SIZE = 0
    # Controls the printing of segment prefixes.
    FORCE_SEGMENT = 1
    # Controls the printing of branch addresses.
    FORCE_RELATIVE_BRANCHES = 2
    # Controls the printing of `EIP`/`RIP`-relative addresses.
    FORCE_RELATIVE_RIPREL = 3
    # Controls the printing of branch-instructions sizes.
    PRINT_BRANCH_SIZE = 4
    # Controls the printing of instruction prefixes.
    DETAILED_PREFIXES = 5
    # Controls the base of address values.
    ADDR_BASE = 6
    # Controls the signedness of relative addresses. Absolute addresses are always unsigned.
    ADDR_SIGNEDNESS = 7
    # Controls the padding of absolute address values.
    ADDR_PADDING_ABSOLUTE = 8
    # Controls the padding of relative address values.
    ADDR_PADDING_RELATIVE = 9
    # Controls the base of displacement values.
    DISP_BASE = 10
    # Controls the signedness of displacement values.
    DISP_SIGNEDNESS = 11
    # Controls the padding of displacement values.
    DISP_PADDING = 12
    # Controls the base of immediate values.
    IMM_BASE = 13
    # Controls the signedness of immediate values.
    IMM_SIGNEDNESS = 14
    # Controls the padding of immediate values.
    IMM_PADDING = 15
    # Controls the letter-case for prefixes.
    UPPERCASE_PREFIXES = 16
    # Controls the letter-case for the mnemonic.
    UPPERCASE_MNEMONIC = 17
    # Controls the letter-case for registers.
    UPPERCASE_REGISTERS = 18
    # Controls the letter-case for typecasts.
    UPPERCASE_TYPECASTS = 19
    # Controls the letter-case for decorators.
    UPPERCASE_DECORATORS = 20
    # Controls the prefix for decimal values.
    DEC_PREFIX = 21
    # Controls the suffix for decimal values.
    DEC_SUFFIX = 22
    # Controls the letter-case of hexadecimal values.
    HEX_UPPERCASE = 23
    # Controls the prefix for hexadecimal values.
    HEX_PREFIX = 24
    # Controls the suffix for hexadecimal values.
    HEX_SUFFIX = 25
    # Maximum value of this enum.
    MAX_VALUE = 25


class NumericBase(IntEnum):
    """Defines the `ZydisNumericBase` enum."""
    # Decimal system.
    DEC = 0
    # Hexadecimal system.
    HEX = 1
    # Maximum value of this enum.
    MAX_VALUE = 1


class Signedness(IntEnum):
    """Defines the `ZydisSignedness` enum."""
    # Automatically choose the most suitable mode based on the operands `ZydisDecodedOperand.imm.is_signed` attribute.
    AUTO = 0
    # Force signed values.
    SIGNED = 1
    # Force unsigned values.
    UNSIGNED = 2
    # Maximum value of this enum.
    MAX_VALUE = 2


class Padding(IntEnum):
    """Defines the `ZydisPadding` enum."""
    # Disables padding.
    DISABLED = 0
    # Padds the value to the current stack-width for addresses, or to the operand-width for immediate values (hexadecimal only).
    AUTO = -1
    # Maximum value of this enum.
    MAX_VALUE = -1


class FormatterFunction(IntEnum):
    """Defines the `ZydisFormatterFunction` enum."""
    # This function is invoked before the formatter formats an instruction.
    PRE_INSTRUCTION = 0
    # This function is invoked after the formatter formatted an instruction.
    POST_INSTRUCTION = 1
    # This function refers to the main formatting function.
    FORMAT_INSTRUCTION = 2
    # This function is invoked before the formatter formats an operand.
    PRE_OPERAND = 3
    # This function is invoked after the formatter formatted an operand.
    POST_OPERAND = 4
    # This function is invoked to format a register operand.
    FORMAT_OPERAND_REG = 5
    # This function is invoked to format a memory operand.
    FORMAT_OPERAND_MEM = 6
    # This function is invoked to format a pointer operand.
    FORMAT_OPERAND_PTR = 7
    # This function is invoked to format an immediate operand.
    FORMAT_OPERAND_IMM = 8
    # This function is invoked to print the instruction mnemonic.
    PRINT_MNEMONIC = 9
    # This function is invoked to print a register.
    PRINT_REGISTER = 10
    # This function is invoked to print absolute addresses.
    PRINT_ADDRESS_ABS = 11
    # This function is invoked to print relative addresses.
    PRINT_ADDRESS_REL = 12
    # This function is invoked to print a memory displacement value.
    PRINT_DISP = 13
    # This function is invoked to print an immediate value.
    PRINT_IMM = 14
    # This function is invoked to print the size of a memory operand (`INTEL` only).
    PRINT_TYPECAST = 15
    # This function is invoked to print the segment-register of a memory operand.
    PRINT_SEGMENT = 16
    # This function is invoked to print the instruction prefixes.
    PRINT_PREFIXES = 17
    # This function is invoked after formatting an operand to print a `EVEX`/`MVEX` decorator.
    PRINT_DECORATOR = 18
    # Maximum value of this enum.
    MAX_VALUE = 18


class Decorator(IntEnum):
    """Defines the `ZydisDecorator` enum."""
    INVALID = 0
    # The embedded-mask decorator.
    MASK = 1
    # The broadcast decorator.
    BC = 2
    # The rounding-control decorator.
    RC = 3
    # The suppress-all-exceptions decorator.
    SAE = 4
    # The register-swizzle decorator.
    SWIZZLE = 5
    # The conversion decorator.
    CONVERSION = 6
    # The eviction-hint decorator.
    EH = 7
    # Maximum value of this enum.
    MAX_VALUE = 7


class InstructionSegment(IntEnum):
    """Defines the `ZydisInstructionSegment` struct."""
    NONE = 0
    # The legacy prefixes (including ignored `REX` prefixes).
    PREFIXES = 1
    # The effective `REX` prefix byte.
    REX = 2
    # The `XOP` prefix bytes.
    XOP = 3
    # The `VEX` prefix bytes.
    VEX = 4
    # The `EVEX` prefix bytes.
    EVEX = 5
    # The `MVEX` prefix bytes.
    MVEX = 6
    # The opcode bytes.
    OPCODE = 7
    # The `ModRM` byte.
    MODRM = 8
    # The `SIB` byte.
    SIB = 9
    # The displacement bytes.
    DISPLACEMENT = 10
    # The immediate bytes.
    IMMEDIATE = 11
    # Maximum value of this enum.
    MAX_VALUE = 11


class Feature(IntEnum):
    """Defines the `ZydisFeature` enum."""
    DECODER = 0
    FORMATTER = 1
    AVX512 = 2
    KNC = 3
    # Maximum value of this enum.
    MAX_VALUE = 3


